const core = require(`@actions/core`);
const github = require(`@actions/github`);
const graphql = require("@octokit/graphql");

// get alert data from https://developer.github.com/v4/object/repositoryvulnerabilityalert/
async function getVulnerabilities() {
  var owner = context.payload.repository.owner.login;
  var repo = context.payload.repository.name;
  core.debug(`owner: ${owner}`);
  core.debug(`repo: ${repo}`);
  var query = `
  repository(owner:${owner},name:${repo}) {
    vulnerabilityAlerts(first:100) {
      totalCount,
      nodes {
        securityVulnerability {
          advisory {
            description
            identifiers {
              type
              value
            }
            references {
              url
            }
            severity
            summary
          }
          firstPatchedVersion {
            identifier
          }
          package {
            name
            ecosystem
          }
          severity
          updatedAt
          vulnerableVersionRange
        }
        repository {
          nameWithOwner
        }
        vulnerableManifestFilename
        vulnerableManifestPath
        vulnerableRequirements
      }
    }
  };`
  try {
    return await graphql(query, {headers: {authorization: `token ${process.env.GITHUB_TOKEN}`}});
  } catch (error) {
    throw error
  }
}

try {
  core.debug(`Running`);
  core.setOutput(`id`, (new Date()).toTimeString()); //TBD: actual Work Item ID
  const context = github.context
  if(context.eventName==`pull_request` && context.actor==`dependabot[bot]` && context.payload.pull_request.title.startsWith(`Bump `)) {
    const [ ,dep_name, ,version_from, , version_to] = context.payload.pull_request.title.split(` `);
    core.debug(`dep_name: ${dep_name}`);
    core.debug(`version_from: ${version_from}`);
    core.debug(`version_to: ${version_to}`);
    getVulnerabilities().then(vulnerabilities => {
      core.debug(`vulnerabilities: ${vulnerabilities}`);
    }).catch(error => {
      core.setFailed(error.message);
    });
  }
  // TBD: create Issue via https://docs.microsoft.com/en-us/rest/api/azure/devops/?view=azure-devops-rest-5.1
} catch (error) {
  core.setFailed(error.message);
}